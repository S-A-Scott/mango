{"name":"Mango","tagline":"","body":"# The Mango library\r\n\r\nThe purpose of the Mango library is to provide\r\n[Guava](https://code.google.com/p/guava-libraries/) (Google's core libraries) functionalities to Scala. This is primarily achieved through wrappers around Guava classes and converter between Java and Scala.\r\nAlso the package structure is intended to mirror the one from Guava.\r\n\r\nHowever there are differences from the Guava libraries:\r\n - Whenever `null` is in Guava to indicate the absence of a value we use `Option`\r\n - Mango is more restrictive when passing `null` as arguments to library functions. The recommendation is to never use `null` at all.\r\n - In rare cases the method names are changed to conform to the Scala standard library\r\n - The Mango library uses Type Classes when appropriate\r\n\r\nThis is a beta version of the library. Many modules are not published yet because they are either not implemented, the test coverage is too low or the documentation is not complete. We publish these modules as soon as they are ready.\r\n\r\n**We use Travis CI for continuous integration:**\r\n - See [https://travis-ci.org/feijoas/mango](https://travis-ci.org/feijoas/mango)\r\n\r\n## Downloading \r\n\r\nMango is programmed against `guava-14.0.1` using Scala 2.10. If you want to run the tests you will also need the `guava-testlib-14.0.1`.\r\n\r\nTo use the Mango library in [sbt](http://www.scala-sbt.org/) add the following dependency to your project file:\r\n```Scala\r\nresolvers ++= Seq(\r\n    \"Sonatype Snapshots\" at \"http://oss.sonatype.org/content/repositories/snapshots\",\r\n    \"Sonatype Releases\" at \"http://oss.sonatype.org/content/repositories/releases\"\r\n)\r\n\r\nlibraryDependencies += \"org.feijoas\" %% \"mango\" % \"0.7\"\r\n```\r\n\r\n## Examples \r\n\r\n### Suppliers\r\n```Scala\r\nimport org.feijoas.mango.common.base.Suppliers._\r\n\r\n// a supplier is just a function () => T\r\nval supplier = () => 3                      //> supplier  : () => Int \r\n                                            //= function0\r\n// convert to a Guava supplier\r\nval gSupplier = supplier.asJava \t\t\t//> gSupplier  : com.google.common.base.Supplier[Int] \r\n                                            //= AsGuavaSupplier(function0)\r\n\r\n// create s supplier that memoize its return\r\n// value for 10 seconds\r\nval memSupplier = memoizeWithExpiration(supplier, 10, TimeUnit.SECONDS)\r\n                                              //> memSupplier  : () => Int  \r\n                                              //= Suppliers.memoizeWithExpiration(function0, 10, SECONDS)\r\n```\r\n### Caches \r\n```Scala\r\nimport java.util.concurrent.TimeUnit\r\nimport org.feijoas.mango.common.cache._\r\n\r\n// the function to cache\r\nval expensiveFnc = (str: String) => str.length  //> expensiveFnc  : String => Int \r\n\r\n// create a cache with a maximum size of 100 and \r\n// exiration time of 10 minutes\r\nval cache = CacheBuilder.newBuilder()\r\n.maximumSize(100)\r\n.expireAfterWrite(10, TimeUnit.MINUTES)\r\n.build(expensiveFnc)              //> cache  : LoadingCache[String,Int]\r\n\r\ncache(\"MyString\")                 //> res0: Int = 8\r\n```\r\n\r\n### BloomFilter & Funnel \r\n```Scala\r\nimport org.feijoas.mango.common.hash.Funnel._\r\nimport org.feijoas.mango.common.hash.BloomFilter._\r\n\r\n// A Funnel describes how to decompose a particular object type into primitive field values.\r\n// For example, if we had\r\ncase class Person(id: Integer, firstName: String, lastName: String, birthYear: Int)\r\n\r\n// our Funnel might look like\r\nimplicit val personFunnel = new Funnel[Person] {\r\n override def funnel(person: Person, into: PrimitiveSink) = {\r\n    into\r\n    .putInt(person.id)\r\n    .putString(person.firstName, Charsets.UTF_8)\r\n    .putString(person.lastName, Charsets.UTF_8)\r\n    .putInt(person.birthYear)\r\n }\r\n}\r\n\r\nval friends: BloomFilter[Person] = BloomFilter.create(500, 0.01)\r\nfriendsList.foreach { case p: Person => friends.put(p) }\r\n\r\n// much later\r\nif (friends.mightContain(dude)) {\r\n\t// the probability that dude reached this place if he isn't a friend is 1%\r\n\t// we might, for example, start asynchronously loading things for dude while we do a more expensive exact check\r\n}\r\n```\r\n\r\nSee the individual packages for more examples and documentation.\r\n\r\n## Converter \r\nConversions to and from the Guava libraries are done with the `.asJava` and `.asScala` methods respectively. These methods are imported together with the utility functions of the class. For example:\r\n```Scala\r\n// import converter for com.google.common.base.Function\r\nimport org.feijoas.mango.common.base.Functions._\r\n\r\nval fnc = (str: String)=> str.length   //> fnc  : String => Int = function1\r\nfnc.asJava                             //> res0: com.google.common.base.Function[String,Int] \r\n                                       //= AsGuavaFunction(function1)\r\n```\r\n\r\n## Build \r\n\r\nJust clone the git repository and build Mango in the following way:\r\n```Scala\r\nsbt update\r\nsbt compile\r\n```\r\n\r\nDon't forget to test\r\n```Scala\r\nsbt test\r\n```\r\n\r\n## Help \r\n\r\nBesides the [Scaladoc](http://feijoas.github.io/mango/scaladoc) there is an excellent user guide [Guava Explained](https://code.google.com/p/guava-libraries/wiki/GuavaExplained) which should be sufficient for almost all questions.\r\n\r\n - Mango-Guava conversions: [Functions](http://feijoas.github.io/mango/scaladoc/index.html#org.feijoas.mango.common.base.Functions$), [Optional](http://feijoas.github.io/mango/scaladoc/index.html#org.feijoas.mango.common.base.Optional$), [Predicates] (http://feijoas.github.io/mango/scaladoc/index.html#org.feijoas.mango.common.base.Predicates$), [Suppliers](http://feijoas.github.io/mango/scaladoc/index.html#org.feijoas.mango.common.base.Suppliers$), [Futures](http://feijoas.github.io/mango/scaladoc/index.html#org.feijoas.mango.common.util.concurrent.Futures$)\r\n - [Preconditions](http://feijoas.github.io/mango/scaladoc/index.html#org.feijoas.mango.common.base.Preconditions$): Test preconditions for your methods more easily.\r\n - [Caches](http://feijoas.github.io/mango/scaladoc/index.html#org.feijoas.mango.common.cache.CacheBuilder$): Local caching, done right, and supporting a wide variety of expiration behaviors.\r\n\r\n## License \r\n\r\n[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}